[project]
name = "test-project" # Replace with your project name
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13.2"
dependencies = [
    "apscheduler>=3.11.0",
    "asyncpg>=0.30.0",
    "bcrypt>=4.3.0",
    "fastapi[standard]>=0.115.12",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "resend>=2.10.0",
    "sqlalchemy[asyncio]>=2.0.41",
]

[dependency-groups]
dev = [
    "coverage>=7.8.2",
    "faker>=37.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest>=8.4.0",
    "typer>=0.16.0",
    "types-passlib>=1.7.7.20250602",
    "trio>=0.30.0",
]

[tool.mypy]
strict = true
exclude = [".venv", "alembic"]


[tool.ruff]
target-version = "py313"
exclude = ["alembic", ".venv"]
line-length = 119

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    # "ARG001", # unused arguments in functions
]


ignore = [
    "B008", # do not perform function calls in argument defaults
    "B904", # Allow raising exceptions without from e, for HTTPException
]


[tool.pytest.ini_options]
markers = [
    "integration: mark test as an integration test",
    "unit: mark test as a unit test",
]
